(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{414:function(s,a,t){"use strict";t.r(a);var e=t(26),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"glibc-2-33"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#glibc-2-33"}},[s._v("#")]),s._v(" Glibc 2.33")]),s._v(" "),t("p",[s._v("Glibc 패키지는 주 C 라이브러리를 제공합니다. 이 라이브러리는 메모리 할당, 디렉토리 검색, 파일 열기/닫기, 파일 읽기/쓰기, 문자열 처리, 패턴 매칭, 산수 등에 필요한 기본 작업을 제공합니다.")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("평균 빌드 시간")]),s._v(" "),t("th",[s._v("필요한 디스크 공간")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("4.2 SBU")]),s._v(" "),t("td",[s._v("770MB")])])])]),s._v(" "),t("h2",{attrs:{id:"glibc의-설치"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#glibc의-설치"}},[s._v("#")]),s._v(" Glibc의 설치")]),s._v(" "),t("p",[s._v("먼저, LSB 호환을 위해 심볼릭 링크를 생성하십시오. 추가로, x86_64에서는 동적 라이브러리 로더의 작동을 위한 호롼성 심볼릭 링크를 생성하십시오.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    i?86"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -sfv ld-linux.so.2 "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/lib/ld-lsb.so.3\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    x86_64"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -sfv "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/lib/ld-linux-x86-64.so.2 "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/lib64\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -sfv "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/lib/ld-linux-x86-64.so.2 "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/lib64/ld-lsb-x86-64.so.3\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])]),t("p",[s._v("일부 Glibc 프로그램은 런타임 데이터를 저장하기 위해 FHS 비호환 "),t("code",[s._v("/var/db")]),s._v(" 디렉토리를 사용합니다. 아래 패치를 적용해서 그러한 프로그램이 FHS 호환 위치에 런타임 데이터를 저장하도록 하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("patch -Np1 -i "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/glibc-2.33-fs-1.patch\n")])])]),t("p",[s._v("Glibc 문서는 Glibc를 별도의 빌드 디렉토리에서 빌드하는 것을 권장합니다.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" build\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" build\n")])])]),t("p",[s._v("Glibc의 컴파일을 준비하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/configure                             "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      --prefix"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr                      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      --host"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS_TGT")]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      --build"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/scripts/config.guess"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      --enable-kernel"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.2")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      --with-headers"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/usr/include    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("libc_cv_slibdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/lib\n")])])]),t("p",[t("strong",[s._v("configure 옵션의 의미")])]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("--host=$LFS_TGT, --build=$(../scripts/config.guess)")])]),s._v(" "),t("p",[s._v("두 옵션을 같이 사용하여 Glibc의 빌드 시스템이 "),t("code",[s._v("$LFS/tools")]),s._v("의 크로스 링커와 크로스 컴파일러를 사용하여 크로스 컴파일되도록 구성합니다.")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("--enable-kernel=3.2")])]),s._v(" "),t("p",[s._v("이는 Glibc가 리눅스 커널 3.2 이상이 필요한 라이브러리를 컴파일하도록 합니다. 더 오래된 커널에 대한 차선책은 사용하지 않습니다.")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("--with-headers=$LFS/usr/include")])]),s._v(" "),t("p",[s._v("이는 Glibc가 방금 $LFS/usr/include에 설치된 헤더를 사용하여 컴파일하도록 하여, 커널의 기능을 확인하고 이에 따라 빌드를 최적화합니다.")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("libc_cv_slibdir=/lib")])]),s._v(" "),t("p",[s._v("이는 64비트 컴퓨터에서 라이브러리가 기본 /lib64 대신 /lib에 설치되도록 합니다.")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("libc_cv_include_x86_isa_level=no")])]),s._v(" "),t("p",[s._v('이는 Glibc 라이브러리에서 "X86 ISA 필요" 속성을 끕니다. '),t("code",[s._v("CFLAGS")]),s._v("에서 "),t("code",[s._v("-march")]),s._v(" 옵션을 사용할 때 Glibc-2.33이 정상적으로 빌드되지 않는 경우의 차선책으로"),t("strong",[s._v("만")]),s._v(" 사용하십시오.")])])]),s._v(" "),t("p",[s._v("이 단계에서 아래 경고가 뜰 수 있습니다:")]),s._v(" "),t("pre",[t("code",[s._v("configure: WARNING:\n*** These auxiliary programs are missing or\n*** incompatible versions: msgfmt\n*** some features will be disabled.\n*** Check the INSTALL file for required versions.\n")])]),s._v(" "),t("p",[t("code",[s._v("msgfmt")]),s._v(" 프로그램이 없거나 호환되지 않는 것은 일반적으로 무해합니다. "),t("code",[s._v("msgfmt")]),s._v(" 프로그램은 호스트 배포판이 제공하는 Gettext 프로그램의 일부입니다.")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("참고")]),s._v(" "),t("p",[s._v("이 패키지를 병렬로 빌드할 때 실패한다는 보고가 있었습니다. 이 경우, "),t("code",[s._v("-j1")]),s._v(" 옵션으로 make 명령어를 다시 실행하십시오.")])]),s._v(" "),t("p",[s._v("패키지를 컴파일하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("경고")]),s._v(" "),t("p",[t("code",[s._v("LFS")]),s._v("가 맞게 설정되어있지 않고 "),t("code",[s._v("root")]),s._v(" 유저로 빌드하고 있다면, 다음 명령어는 새로 빌드한 glibc를 호스트 시스템에 설치하고 사용할 수 없도록 할 수 있습니다. 그러므로 아래 명령어를 실행하기 전에 작업 환경이 적절히 설정되었는지 확인하십시오.")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DESTDIR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])])]),t("p",[t("strong",[t("code",[s._v("make install")]),s._v(" 옵션의 의미")])]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("DESTDIR=$LFS")])]),s._v(" "),t("p",[t("code",[s._v("DESTDIR")]),s._v(" make 변수는 대부분의 패키지에서 패키지가 설치될 위치를 지정하기 위해 사용됩니다. 이것이 설정되지 않았다면, 이는 기본적으로 루트("),t("code",[s._v("/")]),s._v(") 디렉토리입니다. 여기서 패키지는 "),t("RouterLink",{attrs:{to:"/7/4.html"}},[s._v("7.4장 - chroot 환경 진입")]),s._v("부터 루트 디렉토리가 될 "),t("code",[s._v("$LFS")]),s._v("에 설치되도록 명시합니다.")],1)])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("주의")]),s._v(" "),t("p",[s._v("여기에서 잠깐 멈추고 새 툴체인의 기본적인 기능(컴파일, 링크)가 제대로 동작하는 지 확인하는 것이 좋습니다. 이를 확인하려면, 아래 명령어를 실행하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'int main(){}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dummy.c\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS_TGT")]),s._v("-gcc dummy.c\nreadelf -l a.out "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/ld-linux'")]),s._v("\n")])])]),t("p",[s._v("모든 것이 맞게 동작한다면, 에러가 없고 마지막 명령어의 출력은 이런 형식이어야 합니다:\n"),t("pre",[t("code",[s._v("[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]")])])]),s._v(" "),t("p",[s._v("32비트 컴퓨터의 경우 인터프리터 이름은 "),t("code",[s._v("/lib/ld-linux.so.2")]),s._v("입니다.")]),s._v(" "),t("p",[s._v("출력이 이처럼 나오지 않거나 출력이 없다면, 뭔가가 잘못된 것입니다. 단계를 조사하고 역추적하여 문제의 원인을 찾아 해결하십시오. 계속하기 전에 이 문제를 해결해야 합니다.")]),s._v(" "),t("p",[s._v("모든 것이 제대로 동작한다면, 테스트 파일을 삭제하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -v dummy.c a.out\n")])])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("참고")]),s._v(" "),t("p",[s._v("다음 장에서의 패키지의 빌드는 툴체인이 잘 빌드되었다는 것에 대한 추가적인 검사로도 작동합니다. 만약 일부 패키지(특히 binutils pass 2나 gcc pass 2)의 빌드가 실패하면, 이는 기존 Binutils, GCC, Glibc 설치에서 뭔가가 잘못되었다는 것을 의미합니다.")])]),s._v(" "),t("p",[s._v("크로스 툴체인이 완성되었기 때문에, limits.h 헤더의 설치를 완료하십시오. 진행하려면 GCC 개발자가 제공하는 유틸리티를 실행하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/tools/libexec/gcc/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS_TGT")]),s._v("/10.2.0/install-tools/mkheaders\n")])])]),t("p",[s._v("이 패키지의 자세한 내용은 "),t("RouterLink",{attrs:{to:"/8/5.html"}},[s._v("여기")]),s._v("를 참고하십시오.")],1)])}),[],!1,null,null,null);a.default=n.exports}}]);