(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{382:function(t,v,e){"use strict";e.r(v);var _=e(26),n=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"lfs-시스템-빌드-방법"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lfs-시스템-빌드-방법"}},[t._v("#")]),t._v(" LFS 시스템 빌드 방법")]),t._v(" "),e("p",[t._v("LFS 시스템은 Debian, OpenMandriva, Fedora, OpenSUSE 등의 이미 설치된 리눅스 배포판을 사용하여 빌드됩니다. 이 존재하는 리눅스 시스템(호스트)는 새 시스템을 빌드하는 데 필요한 컴파일러, 링커, 셸 등의 필수 프로그램을 제공하는 시작점으로 사용됩니다.")]),t._v(" "),e("p",[t._v("컴퓨터에 별도 배포판을 설치하는 대신, 배포판의 라이브 CD를 사용할 수도 있습니다.")]),t._v(" "),e("p",[t._v("이 책의 2장은 새로운 리눅스 네이티브 파티션과 파일 시스템을 만드는 방법을 설명합니다. 이는 새 LFS 시스템이 컴파일, 설치될 곳입니다. 3장은 LFS 시스템을 빌드하기 위한 패키지와 패치를 설명하고, 이를 새 파일 시스템에 저장하는 방법을 설명합니다. 4장은 맞는 작업 환경의 구성에 대한 내용입니다. 5장부터의 작업을 시작하기 전에 알아둬야 할 중요한 내용을 설명하므로 주의 깊게 읽으십시오.")]),t._v(" "),e("p",[t._v("5장은 호스트 시스템과 새 도구를 격리하기 위한 크로스 컴파일 기술을 이용한 최초 툴체인(binutils, gcc, glibc)의 설치를 설명합니다.")]),t._v(" "),e("p",[t._v("6장은 방금 빌드한 크로스 툴체인으로 기본 유틸리티를 크로스 컴파일하는 방법을 설명합니다.")]),t._v(" "),e("p",[t._v("7장은 "),e("code",[t._v("chroot")]),t._v(" 환경에 진입해서 최종 시스템을 빌드, 테스트하기 위한 추가 도구를 빌드하기 위해 방금 빌드한 도구를 사용합니다.")]),t._v(" "),e("p",[t._v("8장에서, 전체 LFS 시스템이 빌드됩니다. chroot 환경의 또 다른 장점은 LFS를 빌드하는 동안 호스트 시스템을 계속 사용할 수 있다는 것입니다. 패키지 컴파일을 기다리는 동안, 컴퓨터를 평소처럼 쓸 수 있습니다.")]),t._v(" "),e("p",[t._v("설치를 끝내기 위해, 기본 시스템 구성이 9장에서 완료되고, 커널과 부트로더가 10장에서 설치됩니다. 11장은 이 책을 넘어서 LFS 경험을 계속하는 것에 대한 정보를 포함합니다. 이 책의 이러한 단계가 진행된 다음에, 컴퓨터는 새 LFS 시스템으로 부팅할 준비가 됩니다.")]),t._v(" "),e("p",[t._v("이는 간결한 과정입니다. 각 단계별 자세한 설명은 각각의 장과 패키지 설명에 있습니다. 복잡해 보이는 것들이 간결해지고, 모든 것은 LFS 모험을 시작하면 제자리를 찾을 것입니다.")])])}),[],!1,null,null,null);v.default=n.exports}}]);