(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{409:function(t,r,e){"use strict";e.r(r);var s=e(26),n=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"테스트-수트에-대해"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#테스트-수트에-대해"}},[t._v("#")]),t._v(" 테스트 수트에 대해")]),t._v(" "),e("p",[t._v('대부분의 패키지는 테스트 수트를 제공합니다. 새로 빌드한 패키지에 대한 테스트 수트를 실행하는 것은 모든 것이 올바르게 컴파일되었음을 나타내는 "sanity check"를 제공할 수 있기 때문에 좋은 방법입니다. 테스트 수트의 하위 테스트를 통과하는 테스트 수트는 일반적으로 패키지가 개발자가 의도한 대로 작동하고 있음을 증명합니다. 그러나 이 패키지가 완전히 버그가 없음을 보장하는 것은 아닙니다.')]),t._v(" "),e("p",[t._v("일부 테스트 수트는 다른 프로그램보다 더 중요합니다. 예를 들어, 핵심 툴체인 패키지(GCC, binutils, glibc)의 테스트 수트는 제대로 작동하는 시스템에서 중심적인 역할을 하기 때문에 가장 중요합니다. GCC 및 glibc의 테스트 수트는 특히 속도가 느린 하드웨어에서 완료하는 데 시간이 오래 걸릴 수 있지만 권장됩니다.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("참고")]),t._v(" "),e("p",[t._v("5장과 6장에서는 프로그램이 크로스 컴파일러로 컴파일되었기 때문에(빌드 호스트에서 사용하도록 컴파일 되지 않음) 테스트 수트를 실행할 수 없습니다.")])]),t._v(" "),e("p",[t._v("binutils 및 GCC에 대한 테스트 수트의 실행과 관련된 일반적인 문제는 PTY(가상 터미널)가 부족하다는 것입니다. 이로 인해 실패한 테스트 수가 많을 수 있습니다. 이 문제는 여러 가지 이유로 발생할 수 있지만 호스트 시스템에 "),e("code",[t._v("devpts")]),t._v(" 파일 시스템이 올바르게 설정되어 있지 않기 때문일 수 있습니다. 이 문제는 "),e("a",{attrs:{href:"http://www.linuxfromscratch.org/lfs/faq.html#no-ptys",target:"_blank",rel:"noopener noreferrer"}},[t._v("여기"),e("OutboundLink")],1),t._v("에서 자세히 설명합니다.")]),t._v(" "),e("p",[t._v("때로는 패키지 테스트 수트가 실패할 수도 있지만 개발자가 알고 있고 중요하지 않다고 생각하는 이유로 인해 실패할 수도 있습니다. 이러한 실패가 예상되는지 확인하려면 "),e("a",{attrs:{href:"http://www.linuxfromscratch.org/lfs/build-logs/10.1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("여기"),e("OutboundLink")],1),t._v("에 있는 로그를 참조하십시오. 이 사이트는 이 책의 모든 테스트에 유효합니다.")])])}),[],!1,null,null,null);r.default=n.exports}}]);