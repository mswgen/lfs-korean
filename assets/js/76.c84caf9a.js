(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{265:function(s,a,t){"use strict";t.r(a);var e=t(3),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"가상-커널-파일-시스템-준비"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#가상-커널-파일-시스템-준비"}},[s._v("#")]),s._v(" 가상 커널 파일 시스템 준비")]),s._v(" "),t("p",[s._v("커널에서 나온 다양한 파일 시스템은 커널 자체와 통신하는 데 사용됩니다. 이러한 파일 시스템은 가상이기 때문에 디스크 공간이 사용되지 않습니다. 이 파일 시스템의 내용은 메모리에 저장됩니다.")]),s._v(" "),t("p",[s._v("먼저 파일 시스템이 마운트될 디렉토리를 생성하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -pv "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("dev,proc,sys,run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"초기-디바이스-노드-생성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#초기-디바이스-노드-생성"}},[s._v("#")]),s._v(" 초기 디바이스 노드 생성")]),s._v(" "),t("p",[s._v("커널이 시스템을 부팅할 때, 최소한 "),t("code",[s._v("console")]),s._v("과 "),t("code",[s._v("null")]),s._v(" 디바이스 노드가 필요합니다. 이 디바이스 노드는 커널이 "),t("code",[s._v("/dev")]),s._v("를 생성하기 전이나 리눅스가 "),t("code",[s._v("init=/bin/bash")]),s._v("로 시작할 때 사용 가능하도록 하드 디스크에 만들어져야 합니다. 이러한 디바이스를 아래 명령으로 생성하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mknod")]),s._v(" -m "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/dev/console c "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mknod")]),s._v(" -m "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("666")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/dev/null c "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])]),t("h2",{attrs:{id:"dev-마운트-및-생성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dev-마운트-및-생성"}},[s._v("#")]),s._v(" /dev 마운트 및 생성")]),s._v(" "),t("p",[t("code",[s._v("/dev")]),s._v(" 디렉토리를 디바이스로 채우는 권장 방법은 "),t("code",[s._v("/dev")]),s._v(" 디렉토리에 가상 파일 시스템(예: "),t("code",[s._v("tmpfs")]),s._v(")을 마운트하고 디바이스가 검색되거나 액세스할 때 해당 가상 파일 시스템에 동적으로 생성되도록 하는 것입니다. 장치 생성은 일반적으로 Udev에서 부팅 프로세스 중에 수행됩니다. 이 새 시스템에는 아직 Udev가 없으며 아직 부팅되지 않았으므로 수동으로 마운트하고 "),t("code",[s._v("/dev")]),s._v("를 채워야 합니다. 이 작업은 호스트 시스템의 "),t("code",[s._v("/dev")]),s._v(" 디렉토리를 바인딩 마운트하여 수행됩니다. 바인딩 마운트는 디렉토리 또는 마운트 지점의 미러를 다른 위치에 생성할 수 있는 특수 마운트 유형입니다. 다음 명령을 사용하여 이 작업을 수행하십시오.")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" -v --bind /dev "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/dev\n")])])]),t("h2",{attrs:{id:"가상-커널-파일-시스템-마운트"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#가상-커널-파일-시스템-마운트"}},[s._v("#")]),s._v(" 가상 커널 파일 시스템 마운트")]),s._v(" "),t("p",[s._v("이제 나머지 가상 커널 파일시스템을 마운트하십시오:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" -v --bind /dev/pts "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/dev/pts\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" -vt proc proc "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/proc\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" -vt sysfs sysfs "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/sys\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" -vt tmpfs tmpfs "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/run\n")])])]),t("p",[s._v("일부 호스트 시스템에서, "),t("code",[s._v("/dev/shm")]),s._v("은 "),t("code",[s._v("/run/shm")]),s._v("으로의 심볼릭 링크입니다. /run tmpfs는 위에서 마운트되었으므로 이 경우 디렉토리 하나만 만들면 됩니다:")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -h "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/dev/shm "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -pv "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LFS")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("readlink $LFS/dev/shm"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);