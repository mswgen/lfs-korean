(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{219:function(n,e,s){"use strict";s.r(e);var o=s(3),v=Object(o.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"호스트-시스템-조건"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#호스트-시스템-조건"}},[n._v("#")]),n._v(" 호스트 시스템 조건")]),n._v(" "),s("p",[n._v("호스트 시스템은 아래 소프트웨어의 최소한 아래의 버전이 필요합니다. 이는 현대적인 리눅스 배포판에서는 큰 문제가 아닐 것입니다. 또한 많은 배포판은 소프트웨어 헤더를 별도의 패키지(주로 "),s("code",[n._v("<패키지 이름>-dev")]),n._v("나 "),s("code",[n._v("<패키지 이름>-devel")]),n._v(")에 포함할 것이라는 것을 참고하십시오. 만약 배포판이 이를 제공한다면 같이 설치하십시오.")]),n._v(" "),s("p",[n._v("나열된 소프트웨어의 구버전도 작동할 수 있지만, 확인되지는 않았습니다.")]),n._v(" "),s("p",[s("strong",[n._v("Bash 3.2")]),n._v(" ("),s("code",[n._v("/bin/sh")]),n._v("는 bash로의 하드 링크나 심볼릭 링크여야 합니다)")]),n._v(" "),s("p",[s("strong",[n._v("Binutils 2.25")]),n._v(" (2.36.1보다 더 최신 버전은 확인되지 않았기에 권장되지 않습니다)")]),n._v(" "),s("p",[s("strong",[n._v("Bison 2.7")]),n._v(" ("),s("code",[n._v("/usr/bin/yacc")]),n._v("은 bison으로의 링크 혹은 bison을 실행하는 작은 스크립트여야 합니다)")]),n._v(" "),s("p",[s("strong",[n._v("Bzip2 1.0.4")])]),n._v(" "),s("p",[s("strong",[n._v("Coreutils 6.9")])]),n._v(" "),s("p",[s("strong",[n._v("Diffutils 2.8.1")])]),n._v(" "),s("p",[s("strong",[n._v("Findutils 4.2.31")])]),n._v(" "),s("p",[s("strong",[n._v("Gawk 4.0.1")]),n._v(" ("),s("code",[n._v("/usr/bin/awk")]),n._v("은 gawk으로의 링크여야 합니다)")]),n._v(" "),s("p",[s("strong",[n._v("GCC 6.2")]),n._v(" - C++ 컴파일러("),s("code",[n._v("g++")]),n._v(") 포함 (10.2.0보다 더 최신 버전은 확인되지 않았기에 권장되지 않습니다)")]),n._v(" "),s("p",[s("strong",[n._v("Glibc 2.11")]),n._v(" (2.33보다 더 최신 버전은 확인되지 않았기에 권장되지 않습니다)")]),n._v(" "),s("p",[s("strong",[n._v("Grep 2.5.1a")])]),n._v(" "),s("p",[s("strong",[n._v("Gzip 1.3.12")])]),n._v(" "),s("p",[s("strong",[n._v("Linux 커널 3.2")])]),n._v(" "),s("p",[n._v("리눅스 커널 버전 조건이 있는 이유는 6장에서 Glibc를 빌드할 때 개발자의 권장에 따라 이 버전을 명시하기 때문입니다.")]),n._v(" "),s("p",[n._v("만약 호스트의 커널이 3.2보다 더 옛날 버전이라면 최신 버전으로 바꿔야 합니다. 이를 위한 방법은 두 가지입니다. 먼저, 리눅스 벤더가 3.2 혹은 더 최신 버전의 커널을 제공하는지 확인하십시오. 만약 그렇다면, 이 커널을 설치하면 됩니다. 만약 벤더가 이러한 커널 패키지를 제공하지 않거나 이를 설치하지 않으려면, 커널을 직접 컴파일하면 됩니다. 커널 컴파일과 부트로더 설정(호스트가 GRUB을 사용하는 경우)은 10장에 있습니다.")]),n._v(" "),s("p",[s("strong",[n._v("M4 1.4.10")])]),n._v(" "),s("p",[s("strong",[n._v("Make 4.0")])]),n._v(" "),s("p",[s("strong",[n._v("Patch 2.5.4")])]),n._v(" "),s("p",[s("strong",[n._v("Perl 5.8.8")])]),n._v(" "),s("p",[s("strong",[n._v("Python 3.4")])]),n._v(" "),s("p",[s("strong",[n._v("Sed 4.1.5")])]),n._v(" "),s("p",[s("strong",[n._v("Tar 1.22")])]),n._v(" "),s("p",[s("strong",[n._v("Texinfo 4.7")])]),n._v(" "),s("p",[s("strong",[n._v("Xz 5.0.0")])]),n._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[n._v("중요")]),n._v(" "),s("p",[n._v("위에 언급된 심볼릭 링크는 책의 설명대로 LFS 시스템을 빌드하는 데 필요합니다. "),s("code",[n._v("dash")]),n._v(", "),s("code",[n._v("mawk")]),n._v(" 등의 다른 소프트웨어로의 심볼릭 링크는 작동할 수도 있지만, LFS 개발 팀이 지원하거나 확인하지 않고, 일부 패키지는 설명의 변경이나 추가 패치가 필요할 수도 있습니다.")])]),n._v(" "),s("p",[n._v("호스트 시스템이 적절한 버전을 사용하는 지, 그리고 프로그램을 컴파일할 수 있는지 확인하려면, 아래 스크립트를 실행하십시오:")]),n._v(" "),s("pre",[n._v('cat > version-check.sh << "EOF"\n'),s("code",[n._v('#!/bin/bash\n# Simple script to list version numbers of critical development tools\nexport LC_ALL=C\nbash --version | head -n1 | cut -d" " -f2-4\nMYSH=$(readlink -f /bin/sh)\necho "/bin/sh -> $MYSH"\necho $MYSH | grep -q bash || echo "ERROR: /bin/sh does not point to bash"\nunset MYSH\n\necho -n "Binutils: "; ld --version | head -n1 | cut -d" " -f3-\nbison --version | head -n1\n\nif [ -h /usr/bin/yacc ]; then\n  echo "/usr/bin/yacc -> `readlink -f /usr/bin/yacc`";\nelif [ -x /usr/bin/yacc ]; then\n  echo yacc is `/usr/bin/yacc --version | head -n1`\nelse\n  echo "yacc not found" \nfi\n\nbzip2 --version 2>&1 < /dev/null | head -n1 | cut -d" " -f1,6-\necho -n "Coreutils: "; chown --version | head -n1 | cut -d")" -f2\ndiff --version | head -n1\nfind --version | head -n1\ngawk --version | head -n1\n\nif [ -h /usr/bin/awk ]; then\n  echo "/usr/bin/awk -> `readlink -f /usr/bin/awk`";\nelif [ -x /usr/bin/awk ]; then\n  echo awk is `/usr/bin/awk --version | head -n1`\nelse \n  echo "awk not found" \nfi\n\ngcc --version | head -n1\ng++ --version | head -n1\nldd --version | head -n1 | cut -d" " -f2-  # glibc version\ngrep --version | head -n1\ngzip --version | head -n1\ncat /proc/version\nm4 --version | head -n1\nmake --version | head -n1\npatch --version | head -n1\necho Perl `perl -V:version`\npython3 --version\nsed --version | head -n1\ntar --version | head -n1\nmakeinfo --version | head -n1  # texinfo version\nxz --version | head -n1\n\necho \'int main(){}\' > dummy.c && g++ -o dummy dummy.c\nif [ -x dummy ]\n  then echo "g++ compilation OK";\n  else echo "g++ compilation failed"; fi\nrm -f dummy.c dummy\n')]),n._v("EOF\n\nbash version-check.sh\n")])])}),[],!1,null,null,null);e.default=v.exports}}]);